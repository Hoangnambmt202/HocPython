const CourseService = require( "../services/CourseService");


const createCourse = async (req, res) => {
  try {
    console.log("üì• Nh·∫≠n request t·∫°o kh√≥a h·ªçc:", req.body);

    const course = await CourseService.createCourse(req.body);
    res.status(200).json({ success: true, message: "T·∫°o kh√≥a h·ªçc th√†nh c√¥ng!",data: course });
  } catch (error) {
    console.error("L·ªói khi t·∫°o kh√≥a h·ªçc:", error);
    res.status(500).json({ status: "error", message: "L·ªói khi t·∫°o kh√≥a h·ªçc", error });
  }
  };

// L·∫•y t·∫•t c·∫£ kh√≥a h·ªçc
const getAllCourses = async (req, res) => {
  try {
    const response = await CourseService.getAllCourses();
    res.status(200).json(response);
  } catch (error) {
    res.status(500).json({ message: "L·ªói khi l·∫•y danh s√°ch kh√≥a h·ªçc", error });
  }
};
const getCourse = async (req, res) => {
  try {
    const { slug } = req.params;
    
    const course = await CourseService.getCourseBySlug(slug);

    if (!course) {
      return res.status(404).json({ message: "Kh√≥a h·ªçc kh√¥ng t·ªìn t·∫°i" });
    }

    res.status(200).json(course);
 
  } catch (error) {
    res.status(500).json({ message: "L·ªói khi l·∫•y kh√≥a h·ªçc", error });
  }
};

const updateCourse = async (req, res) => {

try {
  const { courseId } = req.params;
  const response = await CourseService.updateCourse(courseId, req.body); 
  if (!response) {
    return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y kh√≥a h·ªçc" });
  }
  res.json(response);

}
catch (error) {
  res.status(500).json({ message: "L·ªói khi c·∫≠p nh·∫≠t kh√≥a h·ªçc", error });
}
}
const deleteCourse = async (req, res) => {

  try {
    const { courseId } = req.params;
    const response = await CourseService.deleteCourse(courseId); 
    if (!response) {
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y kh√≥a h·ªçc" });
    }
    res.json(response);
  
  }
  catch (error) {
    res.status(500).json({ message: "L·ªói khi x√≥a kh√≥a h·ªçc", error });
  }
  }


  module.exports = {
    createCourse,
    getAllCourses,
    getCourse,
    updateCourse,
    deleteCourse

  }